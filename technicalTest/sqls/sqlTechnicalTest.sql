CREATE TABLE products (
    id  NUMBER GENERATED BY DEFAULT AS IDENTITY,
    code VARCHAR2(255) NOT NULL,
    barcode VARCHAR2(255),
    description VARCHAR2(255),
    price NUMBER(10, 2) NOT NULL,
    stock NUMBER DEFAULT 0,
    creation_date DATE DEFAULT SYSDATE,
    CONSTRAINT pk_id_producto PRIMARY KEY (id)
);

COMMENT ON TABLE products IS 'Se registran los datos de los productos';
COMMENT ON COLUMN products.id IS 'Identficador del producto'; 
COMMENT ON COLUMN products.price IS 'Precio del producto'; 
COMMENT ON COLUMN products.stock IS 'Existencia del producto'; 
COMMENT ON COLUMN products.creation_date IS 'Fecha de creacion del producto';
COMMENT ON COLUMN products.code IS 'Codigo del producto';
COMMENT ON COLUMN products.barcode IS 'Codigo de barras del producto';


CREATE OR REPLACE PROCEDURE product_search(
    p_cursor_out OUT SYS_REFCURSOR,
     --Se recibe un solo dato que se utilizara como busqueda universal
    p_search IN VARCHAR2
) AS
BEGIN
    OPEN p_cursor_out FOR
    SELECT *
    FROM products
    WHERE (code || ' ' || barcode || ' ' || description) LIKE '%' || p_search || '%';
END product_search;
/


CREATE OR REPLACE PROCEDURE insert_product(
    p_code IN VARCHAR2,
    p_barcode IN VARCHAR2,
    p_description IN VARCHAR2,
    p_price IN NUMBER,
    p_stock IN NUMBER
) AS
    v_count NUMBER;
BEGIN
    -- Verificar si el stock es mayor o igual a cero
    IF p_stock < 0 THEN
        RAISE_APPLICATION_ERROR(-20002, 'El stock no puede ser negativo.');
    ELSE
        -- Verificar si ya existe un producto con el mismo código y código de barras
        SELECT COUNT(*)
        INTO v_count
        FROM products
        WHERE code = p_code AND barcode = p_barcode;

        -- Si no existe un producto con el mismo código y código de barras, insertar el nuevo producto
        IF v_count = 0 THEN
            INSERT INTO products (code, barcode, description, price, stock)
            VALUES (p_code, p_barcode, p_description, p_price, p_stock);
        ELSE
            RAISE_APPLICATION_ERROR(-20001, 'Ya existe un producto con el mismo código y código de barras.');
        END IF;
    END IF;
END insert_product;
/

CREATE OR REPLACE PROCEDURE update_product(
    p_code IN VARCHAR2,
    p_barcode IN VARCHAR2,
    p_description IN VARCHAR2,
    p_price IN NUMBER,
    p_stock IN NUMBER
) AS
    v_count NUMBER;
BEGIN
    -- Verificar si el registro existe
    SELECT COUNT(*)
    INTO v_count
    FROM products
    WHERE code = p_code AND barcode = p_barcode;

    IF v_count = 0 THEN
        RAISE_APPLICATION_ERROR(-20003, 'El registro ingresado no existe.');
    END IF;

    -- Realizar la actualización de los campos que no son vacíos
    UPDATE products
    SET
        description = COALESCE(p_description, description),
        price = COALESCE(p_price, price),
        stock = COALESCE(p_stock, stock)
    WHERE code = p_code AND barcode = p_barcode;
END update_product;
/